{"version":3,"file":"solanaEmbed.cjs.js","mappings":"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","sources":["webpack://@toruslabs/solana-embed/webpack/bootstrap","webpack://@toruslabs/solana-embed/webpack/runtime/compat get default export","webpack://@toruslabs/solana-embed/webpack/runtime/define property getters","webpack://@toruslabs/solana-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/solana-embed/webpack/runtime/make namespace object","webpack://@toruslabs/solana-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@solana/web3.js\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@toruslabs/solana-embed/external commonjs2 \"eth-rpc-errors\"","webpack://@toruslabs/solana-embed/external commonjs2 \"is-stream\"","webpack://@toruslabs/solana-embed/external commonjs2 \"pump\"","webpack://@toruslabs/solana-embed/./src/messages.ts","webpack://@toruslabs/solana-embed/./src/interfaces.ts","webpack://@toruslabs/solana-embed/./src/config.ts","webpack://@toruslabs/solana-embed/external commonjs2 \"loglevel\"","webpack://@toruslabs/solana-embed/./src/loglevel.ts","webpack://@toruslabs/solana-embed/./src/utils.ts","webpack://@toruslabs/solana-embed/./src/baseProvider.ts","webpack://@toruslabs/solana-embed/./src/embedUtils.ts","webpack://@toruslabs/solana-embed/./src/PopupHandler.ts","webpack://@toruslabs/solana-embed/./src/communicationProvider.ts","webpack://@toruslabs/solana-embed/external commonjs2 \"fast-deep-equal\"","webpack://@toruslabs/solana-embed/./src/inPageProvider.ts","webpack://@toruslabs/solana-embed/./src/siteMetadata.ts","webpack://@toruslabs/solana-embed/./src/embed.ts","webpack://@toruslabs/solana-embed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@solana/web3.js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/base-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"is-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://explorer.solana.com/\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Solana'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example SOL\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://api.devnet.solana.com/\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 0x2 for testnet, 0x3 for devnet,  'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport type NetworkLabel = \"mainnet-beta\" | \"testnet\" | \"devnet\";\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * App name to display in the UI\n   */\n  name?: string;\n  /**\n   * App url\n   */\n  url?: string;\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface | NetworkLabel;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://solana.tor.us,\n   *\n   * development uses http://localhost:8080 (expects torus-website to be run locally),\n   *\n   * testing uses https://solana-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n  /**\n   * Allows passing external data for initialize\n   *\n   * Defaults to empty object\n   */\n  extraParams?: { [keyof: string]: string };\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n}\n\nexport interface TorusLoginParams {\n  loginProvider?: LOGIN_PROVIDER_TYPE;\n  login_hint?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n\nexport interface RequestArguments<T> {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: T;\n}\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"solana-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { NetworkInterface, NetworkLabel } from \"./interfaces\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 600, width: 400 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const getNetworkConfig = (label: NetworkLabel): NetworkInterface | undefined => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://green-dark-sky.solana-mainnet.quiknode.pro/0b4b99540b7930cf590dc7fb0a2d1c9a906fd53c/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://spring-black-waterfall.solana-testnet.quiknode.pro/89830c37acd15df105b23742d37f33dc85b5eff8/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    default:\n      return undefined;\n  }\n};\n","import { createLoggerMiddleware, SafeEventEmitterProvider, SendCallBack } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  SafeEventEmitter,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request<TArgs, TResponse>(args: RequestArguments<TArgs>): Promise<Maybe<TResponse>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  RequestArguments,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, unknown>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown[] | Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { PublicKey, SendOptions, SignaturePubkeyPair, Transaction } from \"@solana/web3.js\";\nimport { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { version } from \"../package.json\";\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  isTopupHidden = false;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn(): boolean {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n    extraParams = {},\n    whiteLabel,\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n                extraParams,\n                whiteLabel,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            if (whiteLabel?.topupHide) this.isTopupHidden = whiteLabel.topupHide;\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            (window as any).torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"solana_requestAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: UserInfo }): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const { privateKey, userInfo } = loginParams;\n    const { success } = await this.communicationProvider.request<{ privateKey: string; userInfo: UserInfo }, { success: boolean }>({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo,\n      },\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  // Solana specific API\n  async getAccounts() {\n    const response = (await this.provider.request({\n      method: \"getAccounts\",\n      params: [],\n    })) as string[];\n    return response;\n  }\n\n  async sendTransaction(transaction: Transaction): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\") },\n    })) as string;\n    return response;\n  }\n\n  // support sendOptions\n  async signAndSendTransaction(transaction: Transaction, options?: SendOptions): Promise<{ signature: string }> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\"), options },\n    })) as string;\n    return { signature: response };\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response: string = (await this.provider.request({\n      method: \"sign_transaction\",\n      params: { message: transaction.serializeMessage().toString(\"hex\"), messageOnly: true },\n    })) as string;\n\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature: SignaturePubkeyPair = { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const encodedMessage: string[] = transactions.map((tx) => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses: string[] = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: { message: encodedMessage, messageOnly: true },\n    });\n\n    // reconstruct signature pairs\n    const signatures: SignaturePubkeyPair[] = responses.map((item) => {\n      const parsed = JSON.parse(item);\n      return { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    });\n\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = (await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data,\n      },\n    })) as Uint8Array;\n    return response;\n  }\n\n  async getGaslessPublicKey(): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: [],\n    })) as string;\n    return response;\n  }\n\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInPageProvider } from \"./inPageProvider\";\nexport * from \"./interfaces\";\n"],"names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","ethErrors","config","log","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","data","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","createLoggerMiddleware","createIdRemapMiddleware","createStreamMiddleware","getRpcPromiseCallback","JRPCEngine","ObjectMultiplex","SafeEventEmitter","duplex","isDuplexStream","pump","messages","BaseProvider","constructor","connectionStream","jsonRpcStreamName","Error","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ignoreStream","jsonRpcConnection","stream","createStream","rpcEngine","push","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","close","redirect","locationReplaceOnRedirect","replace","COMMUNICATION_JRPC_METHODS","COMMUNICATION_NOTIFICATIONS","EthereumRpcError","configuration","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","embedTranslations","windowRefs","on","isConnected","notificationHandler","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","dequal","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PublicKey","setAPIKey","BasePostMessageStream","version","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","whiteLabel","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","topupHide","isTopupHidden","torus","login","loginProvider","provider","login_hint","loginWithPrivateKey","loginParams","privateKey","userInfo","success","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","getAccounts","response","sendTransaction","transaction","serialize","requireAllSignatures","signAndSendTransaction","options","signature","signTransaction","serializeMessage","messageOnly","parsed","JSON","parse","publicKey","Buffer","addSignature","signAllTransactions","transactions","encodedMessage","map","tx","responses","signatures","item","idx","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","default"],"sourceRoot":""}